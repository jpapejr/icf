---
- name: multi-az-cluster-on-vpc2-compute
  hosts: localhost
  gather_facts: no
  tasks:
    - name: ibmcloud_login
      shell: ibmcloud login -r {{ lookup('env','region') }} -u jtpape@us.ibm.com -c "{{ lookup('env','account_id') }}" -d default --apikey {{ lookup('env','ibmcloud_api_key') }}
      register: auth_out
    - name: target_vpc2
      shell: ibmcloud is target --gen 2
    - block: 
        - name: create_vpc
          shell: ibmcloud is vpc-create vpc-{{ lookup('env', 'petname') }} --address-prefix-management manual --json
          register: vpc_out
        - name: get_vpc_id
          shell: ibmcloud is vpcs | grep vpc-{{ lookup('env', 'petname') }} | awk '/.*/ { print $1}'
          register: vpc_id
        - name: update_vpc_default_sg
          shell: ibmcloud is sgu $(ibmcloud is sgs | grep $(ibmcloud is vpcs | grep vpc-{{ lookup('env', 'petname') }} | awk '/.*/ { print $6}') | awk '/.*/ {print $1}') --name vpc-{{ lookup('env', 'petname') }}-default 
        - name: update_vpc_default_nwacl
          shell: ibmcloud is nwaclu $(ibmcloud is nwacls | grep $(ibmcloud is vpcs | grep vpc-{{ lookup('env', 'petname') }} | awk '/.*/ { print $5}') | awk '/.*/ {print $1}') --name vpc-{{ lookup('env', 'petname') }}-default 
        - name: update_default_sg_for_iks
          shell: ibmcloud is security-group-rule-add $(ibmcloud is sgs | grep $(ibmcloud is vpcs | grep vpc-{{ lookup('env', 'petname') }} | awk '/.*/ { print $6}') | awk '/.*/ {print $1}') inbound tcp --port-min 30000 --port-max 32767
      ignore_errors: True
    - block:
      - name: create_prefix1
        shell: ibmcloud is vpc-address-prefix-create prefix1 {{ vpc_id.stdout }} {{ lookup('env', 'region') }}-1 {{ lookup('env', 'prefix1') }}/18 
      - name: create_prefix2
        shell: ibmcloud is vpc-address-prefix-create prefix2 {{ vpc_id.stdout }} {{ lookup('env', 'region') }}-2 {{ lookup('env', 'prefix2') }}/18
      - name: create_prefix3
        shell: ibmcloud is vpc-address-prefix-create prefix3 {{ vpc_id.stdout }} {{ lookup('env', 'region') }}-3 {{ lookup('env', 'prefix3') }}/18
      ignore_errors: True
    - block:
      - name: create_subnet1_pgw
        shell: ibmcloud is public-gateway-create vpc-{{ lookup('env', 'petname') }}-subnet1-pgw {{ vpc_id.stdout }}  {{ lookup('env', 'region') }}-1
      - name: create_subnet2_pgw
        shell: ibmcloud is public-gateway-create vpc-{{ lookup('env', 'petname') }}-subnet2-pgw {{ vpc_id.stdout }}  {{ lookup('env', 'region') }}-2
      ignore_errors: True
    - block:
      - name: create_subnet1
        shell: ibmcloud is subnet-create vpc-{{ lookup('env', 'petname') }}-subnet1  {{ vpc_id.stdout }} --zone {{ lookup('env', 'region') }}-1 --public-gateway-id $(ibmcloud is public-gateways | grep vpc-{{ lookup('env', 'petname') }}-subnet1-pgw | awk '/.*/ {print $1}') --ipv4-cidr-block {{ lookup('env', 'prefix1') }}/24

      - name: create_subnet2
        shell: ibmcloud is subnet-create vpc-{{ lookup('env', 'petname') }}-subnet2  {{ vpc_id.stdout }} --zone {{ lookup('env', 'region') }}-2 --public-gateway-id $(ibmcloud is public-gateways | grep vpc-{{ lookup('env', 'petname') }}-subnet2-pgw | awk '/.*/ {print $1}') --ipv4-cidr-block {{ lookup('env', 'prefix2') }}/24
    - block:
      - name: create_cluster
        shell: ibmcloud ks cluster create vpc-gen2 --name {{ lookup('env', 'petname') }} --zone {{ lookup('env', 'region') }}-1 --vpc-id {{ vpc_id.stdout }} --subnet-id $(ibmcloud is subnets | grep vpc-{{ lookup('env', 'petname') }}-subnet1 | awk '/.*/ {print $1}') --flavor {{ lookup('env', 'flavor') }} --workers  {{ lookup('env', 'workers') }} --version  {{ lookup('env', 'version') }}
        register: cluster_out
      - name: attach_zone2
        shell: ibmcloud ks zone add vpc-gen2 --cluster {{ lookup('env', 'petname') }} --subnet-id $(ibmcloud is subnets | grep vpc-{{ lookup('env', 'petname') }}-subnet2 | awk '/.*/ {print $1}') --zone {{ lookup('env', 'region') }}-2 --worker-pool default
      - name: wait_for_cluster_ready
        when: cluster_out is succeeded
        shell: while [ "$(ibmcloud ks cluster get -c {{ lookup('env', 'petname') }} --json | jq ".state" | sed -e 's/^"//' -e 's/"$//')" != "normal" ]; do printf . && sleep 60; done
        register: cluster_wait_out
      - debug:
          var: cluster_wait_out
      - debug:
          msg: "Cluster: {{ lookup('env', 'petname') }} / VPC: vpc-{{ lookup('env', 'petname') }} : {{vpc_id.stdout}} in {{ lookup('env', 'region') }}"
